LISTING 1 - L'activité "Hello World" par défaut


package com.LSINF1225.myapplication;
import ...
public class MyActivity extends Activity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_my);
    }
...


LISTING 2 - Layout par défaut de la "Hello World" activity


<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    tools:context=".MyActivity"
    android:clickable="true">
    <TextView
        android:text="@string/hello_world"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content" />
</RelativeLayout>


LISTING 3 - Ressources par déefaut de type string (values/strings.xml)


<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">My Application</string>
    <string name="hello_world">Hello world!</string>
    <string name="action_settings">Settings</string>
</resources>


LISTING 4 - Fichier ressources de type string modifié (values/strings.xml)


<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">My Application</string>
    <string name="hello_world">Hello world!</string>
    <string name="action_settings">Settings</string>
    <string name="button_choose_item">Choose new item</string>
    <string name="label_current_selection">Current selection: </string>
    <string name="label_default_selection">None</string>
    <string name="title_activity_my_list">My List Activity</string>
</resources>


LISTING 5 - Une ListActivity


package com.LSINF1225.myapplication;

import android.app.ListActivity;
import java.util.List;
import java.util.Arrays;
import android.os.Bundle;
import android.widget.ArrayAdapter;
import android.widget.AdapterView;
import android.widget.Toast;
import android.view.View;
import android.content.Intent;

public class MyListActivity extends ListActivity {
    public static final String CHOSEN_TEXT = "texteChoisi";
    List<String> someStrings = Arrays.asList("java", "scala", "prolog", "smalltalk");
    String chosenString;
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, //contexte courant
                android.R.layout.simple_list_item_1, //id de l'element de layout utilise 
      												 //par defaut pour representer les
                                                     //lignes de la liste (cet id est pre
                                                     // -defini dans Android)
                someStrings); // la collection d'elements à adapter à la liste
        setListAdapter(adapter);
        getListView().setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                chosenString = someStrings.get(position);
                Toast.makeText(MyListActivity.this, "Vous avez choisi : " + chosenString, Toast.LENGTH_SHORT).show();
            }
        });
    }
    @Override
    public void finish() {
        if(chosenString != null) {
            Intent data = new Intent();
            data.putExtra(CHOSEN_TEXT, chosenString);
            setResult(RESULT_OK, data);
        }
        super.finish();
    }
}


LISTING 6 - Le fichier manifeste de l'application


<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.LSINF1225.myapplication" >
    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >
        <activity
            android:name=".MyActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".MyListActivity"
            android:label="@string/title_activity_my_list" >
        </activity>
    </application>
</manifest>


LISTING 6 bis - Le fichier manifeste de l'application modifié


<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.LSINF1225.myapplication" >
    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >
        <activity
            android:name=".MyActivity"
            android:label="@string/app_name" >
        </activity>
        <activity
            android:name=".MyListActivity"
            android:label="@string/title_activity_my_list" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>
</manifest>


LISTING 7 - Le nouveau layout de l'activité MyActivity avec des vues de type textView et un bouton


<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    tools:context=".MyActivity"
    android:clickable="false">
    <LinearLayout
        android:id="@+id/linear_layout_selection"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_centerVertical="true" >
        <TextView
            android:id="@+id/label_current_selection"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/label_current_selection" />
        <TextView
            android:id="@+id/current_selection"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/label_default_selection" />
    </LinearLayout>
    <Button
        android:id="@+id/button_choose_item"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/linear_layout_selection"
        android:layout_centerHorizontal="true"
        android:text="@string/button_choose_item" />
</RelativeLayout>


LISTING 8 - La nouvelle version de l'activité MyActivity


package com.LSINF1225.myapplication;
import ...

public class MyActivity extends Activity {
    private static final int REQUEST_CODE = 1;
    private TextView currentSelection;
    private Button selectItemButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_my);
        currentSelection = (TextView) findViewById(R.id.current_selection);
        selectItemButton = (Button) findViewById(R.id.button_choose_item);
        selectItemButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View arg0) {
                Intent i = new Intent(MyActivity.this, MyListActivity.class);
                startActivityForResult(i, REQUEST_CODE);
            }
        });
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        //"Gonfle" le menu (ajout des elements de la barre d'action)
        getMenuInflater().inflate(R.menu.my, menu);
        return true;
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == REQUEST_CODE && resultCode == RESULT_OK) {
            if(data.hasExtra(MyListActivity.CHOSEN_TEXT))
                currentSelection.setText(data.getExtras().getString(MyListActivity.CHOSEN_TEXT));
        }
    }
}


LISTING 9 - Modification de l'activité MyListActivity


    List<String> someStrings; //= Arrays.asList("java", "scala", "prolog", "smalltalk");
    String chosenString;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        MySQLiteOpenHelper db = new MySQLiteOpenHelper(this);
        //Recuperer toutes les entrees de la base de donnees
        if ( db.open() ) {
            someStrings = db.getLanguages();
        } else {
            // erreur ouverture bd
            throw new Error("Impossible d'ouvrir la base de donnees");
        }
...


LISTING 10 - La classe qui représente la base de données


package com.LSINF1225.database;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import java.util.ArrayList;
import java.util.List;

/**
 * @author Damien Mercier
 * @version 1
 * @see <a href="http://d.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html">SQLiteOpenHelper</a>
 */
public class MySQLiteOpenHelper extends SQLiteOpenHelper {

    /**
     * Nom du fichier de la base de donnees.
     */
    private static final String DATABASE_NAME = "database.sqlite";

    /**
     * Version de la base de donnees (à incrementer en cas de modification de celle-ci afin que la
     * methode onUpgrade soit appelee).
     *
     * @note Le numero de version doit changer de maniere monotone.
     */
    private static final int DATABASE_VERSION = 1;

    /**
     * Le contexte de l'application
     */
    private static Context context;

    /**
     * Constructeur. Instancie l'utilitaire de gestion de la base de donnees.
     *
     * @param context Contexte de l'application.
     */
    public MySQLiteOpenHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
        this.context = context;
    }


LISTING 11 - La classe qui représente la base de données (suite)


    /**
     * Methode d'initialisation appelee lors de la creation de la base de donnees.
     * Ici on y cree les tables de la base de donnees et les remplit.
     *
     * @param db Base de donnees à initialiser.
     * @param db Base de donnees à initialiser
     */
    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("DROP TABLE IF EXISTS \"languages\";");
        db.execSQL("CREATE TABLE \"languages\" (\"l_id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL , \"l_name\" TEXT);");
    }

    /**
     * Ouvre la base de donnees en ecriture
     */
    public boolean open() {
        try {
            getWritableDatabase();
            return true;
        } catch(Throwable t) {
            return false;
        }
    }

    /**
     * Supprime la table dans la base de donnees.
     *
     * @param db Base de donnees.
     *
     * @post La tables de la base de donnees passee en argument est effacee.
     */
    private void deleteDatabase(SQLiteDatabase db) {
        db.execSQL("DROP TABLE IF EXISTS \"languages\";");
    }

    /**
     * Methode de mise à jour lors du changement de version de la base de donnees.
     *
     * @param db         Base de donnees à mettre à jour.
     * @param oldVersion Numero de l'ancienne version.
     * @param newVersion Numero de la nouvelle version.
     * @pre La base de donnees est dans la version oldVersion.
     * @post La base de donnees a ete mise à jour vers la version newVersion.
     */
    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
    
        deleteDatabase(db);
        onCreate(db);
    }


LISTING 12 - La classe qui représente la base de données (suite)


    /**
     * Renvoie la liste les langages contenus dans la base de donnees
     * @return null si requete sans resultat, une liste de strings contenant
     * les langages presents dans la base de donnees.
     */
    public List<String> getLanguages() {
        List<String> languages = new ArrayList<String>();
        SQLiteDatabase db = getReadableDatabase();
        // Les resultats de la requête sont mis dans un "curseur"
        Cursor c = db.query("\"languages\"", // La table
                new String[]{"\"l_id\"", "\"l_name\""},
                null, // Colonnes pour la clause WHERE
                null, // Valeurs pour la clause WHERE
                null, // ne pas grouper les lignes
                null, // ne pas filtrer par goupe de ligne
                null  // pas d'ordre
        );
        if (c.moveToFirst()) {
            for (int i = 0; i < c.getCount(); i++) {
                String s = c.getString(c.getColumnIndexOrThrow("l_name"));
                languages.add(s);
                c.moveToNext();
            }
        }
        c.close();
        return languages;
    }
}


LISTING 13 - Instructions SQL à ajouter


    @Override
    public void onCreate(SQLiteDatabase db) {

        db.execSQL("DROP TABLE IF EXISTS \"languages\";");
        db.execSQL("CREATE TABLE \"languages\" (\"l_id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL , \"l_name\" TEXT);");
        
        db.execSQL("INSERT INTO \"languages\" VALUES(1,'java');");
        db.execSQL("INSERT INTO \"languages\" VALUES(2,'scala');");
        db.execSQL("INSERT INTO \"languages\" VALUES(3,'prolog');");
        db.execSQL("INSERT INTO \"languages\" VALUES(4,'smaltalk');");
    }
